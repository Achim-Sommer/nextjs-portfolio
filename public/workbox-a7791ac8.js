define(["exports"],(function(t){"use strict";try{self["workbox:core:6.5.4"]&&_()}catch(t){}const e=(t,...e)=>{let n=t;return e.length>0&&(n+=` :: ${JSON.stringify(e)}`),n};class n extends Error{constructor(t,n){super(e(t,n)),this.name=t,this.details=n}}try{self["workbox:routing:6.5.4"]&&_()}catch(t){}const s=t=>t&&"object"==typeof t?t:{handle:t};class r{constructor(t,e,n="GET"){this.handler=s(e),this.match=t,this.method=n}setCatchHandler(t){this.catchHandler=s(t)}}class i extends r{constructor(t,e,n){super((({url:e})=>{const n=t.exec(e.href);if(n&&(e.origin===location.origin||0===n.index))return n.slice(1)}),e,n)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(t=>{const{request:e}=t,n=this.handleRequest({request:e,event:t});n&&t.respondWith(n)}))}addCacheListener(){self.addEventListener("message",(t=>{if(t.data&&"CACHE_URLS"===t.data.type){const{payload:e}=t.data,n=Promise.all(e.urlsToCache.map((e=>{"string"==typeof e&&(e=[e]);const n=new Request(...e);return this.handleRequest({request:n,event:t})})));t.waitUntil(n),t.ports&&t.ports[0]&&n.then((()=>t.ports[0].postMessage(!0)))}}))}handleRequest({request:t,event:e}){const n=new URL(t.url,location.href);if(!n.protocol.startsWith("http"))return;const s=n.origin===location.origin,{params:r,route:i}=this.findMatchingRoute({event:e,request:t,sameOrigin:s,url:n});let a=i&&i.handler;const o=t.method;if(!a&&this.i.has(o)&&(a=this.i.get(o)),!a)return;let c;try{c=a.handle({url:n,request:t,event:e,params:r})}catch(t){c=Promise.reject(t)}const h=i&&i.catchHandler;return c instanceof Promise&&(this.o||h)&&(c=c.catch((async s=>{if(h)try{return await h.handle({url:n,request:t,event:e,params:r})}catch(t){t instanceof Error&&(s=t)}if(this.o)return this.o.handle({url:n,request:t,event:e});throw s}))),c}findMatchingRoute({url:t,sameOrigin:e,request:n,event:s}){const r=this.t.get(n.method)||[];for(const i of r){let r;const a=i.match({url:t,sameOrigin:e,request:n,event:s});if(a)return r=a,(Array.isArray(r)&&0===r.length||a.constructor===Object&&0===Object.keys(a).length||"boolean"==typeof a)&&(r=void 0),{route:i,params:r}}return{}}setDefaultHandler(t,e="GET"){this.i.set(e,s(t))}setCatchHandler(t){this.o=s(t)}registerRoute(t){this.t.has(t.method)||this.t.set(t.method,[]),this.t.get(t.method).push(t)}unregisterRoute(t){if(!this.t.has(t.method))throw new n("unregister-route-but-not-found-with-method",{method:t.method});const e=this.t.get(t.method).indexOf(t);if(!(e>-1))throw new n("unregister-route-route-not-registered");this.t.get(t.method).splice(e,1)}}let o;const c=()=>(o||(o=new a,o.addFetchListener(),o.addCacheListener()),o);function h(t,e,s){let a;if("string"==typeof t){const n=new URL(t,location.href);a=new r((({url:t})=>t.href===n.href),e,s)}else if(t instanceof RegExp)a=new i(t,e,s);else if("function"==typeof t)a=new r(t,e,s);else{if(!(t instanceof r))throw new n("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=t}return c().registerRoute(a),a}const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=t=>[u.prefix,t,u.suffix].filter((t=>t&&t.length>0)).join("-"),f=t=>t||l(u.precache),w=t=>t||l(u.runtime);function d(t){t.then((()=>{}))}const p=new Set;function y(){return y=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var s in n)({}).hasOwnProperty.call(n,s)&&(t[s]=n[s])}return t},y.apply(null,arguments)}let g,m;const v=new WeakMap,R=new WeakMap,b=new WeakMap,q=new WeakMap,D=new WeakMap;let U={get(t,e,n){if(t instanceof IDBTransaction){if("done"===e)return R.get(t);if("objectStoreNames"===e)return t.objectStoreNames||b.get(t);if("store"===e)return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return C(t[e])},set:(t,e,n)=>(t[e]=n,!0),has:(t,e)=>t instanceof IDBTransaction&&("done"===e||"store"===e)||e in t};function x(t){return t!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(m||(m=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(t)?function(...e){return t.apply(E(this),e),C(v.get(this))}:function(...e){return C(t.apply(E(this),e))}:function(e,...n){const s=t.call(E(this),e,...n);return b.set(s,e.sort?e.sort():[e]),C(s)}}function L(t){return"function"==typeof t?x(t):(t instanceof IDBTransaction&&function(t){if(R.has(t))return;const e=new Promise(((e,n)=>{const s=()=>{t.removeEventListener("complete",r),t.removeEventListener("error",i),t.removeEventListener("abort",i)},r=()=>{e(),s()},i=()=>{n(t.error||new DOMException("AbortError","AbortError")),s()};t.addEventListener("complete",r),t.addEventListener("error",i),t.addEventListener("abort",i)}));R.set(t,e)}(t),e=t,(g||(g=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some((t=>e instanceof t))?new Proxy(t,U):t);var e}function C(t){if(t instanceof IDBRequest)return function(t){const e=new Promise(((e,n)=>{const s=()=>{t.removeEventListener("success",r),t.removeEventListener("error",i)},r=()=>{e(C(t.result)),s()},i=()=>{n(t.error),s()};t.addEventListener("success",r),t.addEventListener("error",i)}));return e.then((e=>{e instanceof IDBCursor&&v.set(e,t)})).catch((()=>{})),D.set(e,t),e}(t);if(q.has(t))return q.get(t);const e=L(t);return e!==t&&(q.set(t,e),D.set(e,t)),e}const E=t=>D.get(t);const I=["get","getKey","getAll","getAllKeys","count"],N=["put","add","delete","clear"],O=new Map;function B(t,e){if(!(t instanceof IDBDatabase)||e in t||"string"!=typeof e)return;if(O.get(e))return O.get(e);const n=e.replace(/FromIndex$/,""),s=e!==n,r=N.includes(n);if(!(n in(s?IDBIndex:IDBObjectStore).prototype)||!r&&!I.includes(n))return;const i=async function(t,...e){const i=this.transaction(t,r?"readwrite":"readonly");let a=i.store;return s&&(a=a.index(e.shift())),(await Promise.all([a[n](...e),r&&i.done]))[0]};return O.set(e,i),i}U=(t=>y({},t,{get:(e,n,s)=>B(e,n)||t.get(e,n,s),has:(e,n)=>!!B(e,n)||t.has(e,n)}))(U);try{self["workbox:expiration:6.5.4"]&&_()}catch(t){}const k="cache-entries",T=t=>{const e=new URL(t,location.href);return e.hash="",e.href};class M{constructor(t){this.h=null,this.u=t}l(t){const e=t.createObjectStore(k,{keyPath:"id"});e.createIndex("cacheName","cacheName",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}p(t){this.l(t),this.u&&function(t,{blocked:e}={}){const n=indexedDB.deleteDatabase(t);e&&n.addEventListener("blocked",(t=>e(t.oldVersion,t))),C(n).then((()=>{}))}(this.u)}async setTimestamp(t,e){const n={url:t=T(t),timestamp:e,cacheName:this.u,id:this.m(t)},s=(await this.getDb()).transaction(k,"readwrite",{durability:"relaxed"});await s.store.put(n),await s.done}async getTimestamp(t){const e=await this.getDb(),n=await e.get(k,this.m(t));return null==n?void 0:n.timestamp}async expireEntries(t,e){const n=await this.getDb();let s=await n.transaction(k).store.index("timestamp").openCursor(null,"prev");const r=[];let i=0;for(;s;){const n=s.value;n.cacheName===this.u&&(t&&n.timestamp<t||e&&i>=e?r.push(s.value):i++),s=await s.continue()}const a=[];for(const t of r)await n.delete(k,t.id),a.push(t.url);return a}m(t){return this.u+"|"+T(t)}async getDb(){return this.h||(this.h=await function(t,e,{blocked:n,upgrade:s,blocking:r,terminated:i}={}){const a=indexedDB.open(t,e),o=C(a);return s&&a.addEventListener("upgradeneeded",(t=>{s(C(a.result),t.oldVersion,t.newVersion,C(a.transaction),t)})),n&&a.addEventListener("blocked",(t=>n(t.oldVersion,t.newVersion,t))),o.then((t=>{i&&t.addEventListener("close",(()=>i())),r&&t.addEventListener("versionchange",(t=>r(t.oldVersion,t.newVersion,t)))})).catch((()=>{})),o}("workbox-expiration",1,{upgrade:this.p.bind(this)})),this.h}}class W{constructor(t,e={}){this.v=!1,this.R=!1,this.q=e.maxEntries,this.D=e.maxAgeSeconds,this.U=e.matchOptions,this.u=t,this.L=new M(t)}async expireEntries(){if(this.v)return void(this.R=!0);this.v=!0;const t=this.D?Date.now()-1e3*this.D:0,e=await this.L.expireEntries(t,this.q),n=await self.caches.open(this.u);for(const t of e)await n.delete(t,this.U);this.v=!1,this.R&&(this.R=!1,d(this.expireEntries()))}async updateTimestamp(t){await this.L.setTimestamp(t,Date.now())}async isURLExpired(t){if(this.D){const e=await this.L.getTimestamp(t),n=Date.now()-1e3*this.D;return void 0===e||e<n}return!1}async delete(){this.R=!1,await this.L.expireEntries(1/0)}}function P(t,e){const n=new URL(t);for(const t of e)n.searchParams.delete(t);return n.href}class j{constructor(){this.promise=new Promise(((t,e)=>{this.resolve=t,this.reject=e}))}}try{self["workbox:strategies:6.5.4"]&&_()}catch(t){}function S(t){return"string"==typeof t?new Request(t):t}class K{constructor(t,e){this._={},Object.assign(this,e),this.event=e.event,this.C=t,this.I=new j,this.N=[],this.O=[...t.plugins],this.B=new Map;for(const t of this.O)this.B.set(t,{});this.event.waitUntil(this.I.promise)}async fetch(t){const{event:e}=this;let s=S(t);if("navigate"===s.mode&&e instanceof FetchEvent&&e.preloadResponse){const t=await e.preloadResponse;if(t)return t}const r=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const t of this.iterateCallbacks("requestWillFetch"))s=await t({request:s.clone(),event:e})}catch(t){if(t instanceof Error)throw new n("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const i=s.clone();try{let t;t=await fetch(s,"navigate"===s.mode?void 0:this.C.fetchOptions);for(const n of this.iterateCallbacks("fetchDidSucceed"))t=await n({event:e,request:i,response:t});return t}catch(t){throw r&&await this.runCallbacks("fetchDidFail",{error:t,event:e,originalRequest:r.clone(),request:i.clone()}),t}}async fetchAndCachePut(t){const e=await this.fetch(t),n=e.clone();return this.waitUntil(this.cachePut(t,n)),e}async cacheMatch(t){const e=S(t);let n;const{cacheName:s,matchOptions:r}=this.C,i=await this.getCacheKey(e,"read"),a=Object.assign(Object.assign({},r),{cacheName:s});n=await caches.match(i,a);for(const t of this.iterateCallbacks("cachedResponseWillBeUsed"))n=await t({cacheName:s,matchOptions:r,cachedResponse:n,request:i,event:this.event})||void 0;return n}async cachePut(t,e){const s=S(t);var r;await(r=0,new Promise((t=>setTimeout(t,r))));const i=await this.getCacheKey(s,"write");if(!e)throw new n("cache-put-with-no-response",{url:(a=i.url,new URL(String(a),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var a;const o=await this.k(e);if(!o)return!1;const{cacheName:c,matchOptions:h}=this.C,u=await self.caches.open(c),l=this.hasCallback("cacheDidUpdate"),f=l?await async function(t,e,n,s){const r=P(e.url,n);if(e.url===r)return t.match(e,s);const i=Object.assign(Object.assign({},s),{ignoreSearch:!0}),a=await t.keys(e,i);for(const e of a)if(r===P(e.url,n))return t.match(e,s)}(u,i.clone(),["__WB_REVISION__"],h):null;try{await u.put(i,l?o.clone():o)}catch(t){if(t instanceof Error)throw"QuotaExceededError"===t.name&&await async function(){for(const t of p)await t()}(),t}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:c,oldResponse:f,newResponse:o.clone(),request:i,event:this.event});return!0}async getCacheKey(t,e){const n=`${t.url} | ${e}`;if(!this._[n]){let s=t;for(const t of this.iterateCallbacks("cacheKeyWillBeUsed"))s=S(await t({mode:e,request:s,event:this.event,params:this.params}));this._[n]=s}return this._[n]}hasCallback(t){for(const e of this.C.plugins)if(t in e)return!0;return!1}async runCallbacks(t,e){for(const n of this.iterateCallbacks(t))await n(e)}*iterateCallbacks(t){for(const e of this.C.plugins)if("function"==typeof e[t]){const n=this.B.get(e),s=s=>{const r=Object.assign(Object.assign({},s),{state:n});return e[t](r)};yield s}}waitUntil(t){return this.N.push(t),t}async doneWaiting(){let t;for(;t=this.N.shift();)await t}destroy(){this.I.resolve(null)}async k(t){let e=t,n=!1;for(const t of this.iterateCallbacks("cacheWillUpdate"))if(e=await t({request:this.request,response:e,event:this.event})||void 0,n=!0,!e)break;return n||e&&200!==e.status&&(e=void 0),e}}class A{constructor(t={}){this.cacheName=w(t.cacheName),this.plugins=t.plugins||[],this.fetchOptions=t.fetchOptions,this.matchOptions=t.matchOptions}handle(t){const[e]=this.handleAll(t);return e}handleAll(t){t instanceof FetchEvent&&(t={event:t,request:t.request});const e=t.event,n="string"==typeof t.request?new Request(t.request):t.request,s="params"in t?t.params:void 0,r=new K(this,{event:e,request:n,params:s}),i=this.T(r,n,e);return[i,this.M(i,r,n,e)]}async T(t,e,s){let r;await t.runCallbacks("handlerWillStart",{event:s,request:e});try{if(r=await this.W(e,t),!r||"error"===r.type)throw new n("no-response",{url:e.url})}catch(n){if(n instanceof Error)for(const i of t.iterateCallbacks("handlerDidError"))if(r=await i({error:n,event:s,request:e}),r)break;if(!r)throw n}for(const n of t.iterateCallbacks("handlerWillRespond"))r=await n({event:s,request:e,response:r});return r}async M(t,e,n,s){let r,i;try{r=await t}catch(i){}try{await e.runCallbacks("handlerDidRespond",{event:s,request:n,response:r}),await e.doneWaiting()}catch(t){t instanceof Error&&(i=t)}if(await e.runCallbacks("handlerDidComplete",{event:s,request:n,response:r,error:i}),e.destroy(),i)throw i}}const F={cacheWillUpdate:async({response:t})=>200===t.status||0===t.status?t:null};try{self["workbox:range-requests:6.5.4"]&&_()}catch(t){}async function H(t,e){try{if(206===e.status)return e;const s=t.headers.get("range");if(!s)throw new n("no-range-header");const r=function(t){const e=t.trim().toLowerCase();if(!e.startsWith("bytes="))throw new n("unit-must-be-bytes",{normalizedRangeHeader:e});if(e.includes(","))throw new n("single-range-only",{normalizedRangeHeader:e});const s=/(\d*)-(\d*)/.exec(e);if(!s||!s[1]&&!s[2])throw new n("invalid-range-values",{normalizedRangeHeader:e});return{start:""===s[1]?void 0:Number(s[1]),end:""===s[2]?void 0:Number(s[2])}}(s),i=await e.blob(),a=function(t,e,s){const r=t.size;if(s&&s>r||e&&e<0)throw new n("range-not-satisfiable",{size:r,end:s,start:e});let i,a;return void 0!==e&&void 0!==s?(i=e,a=s+1):void 0!==e&&void 0===s?(i=e,a=r):void 0!==s&&void 0===e&&(i=r-s,a=r),{start:i,end:a}}(i,r.start,r.end),o=i.slice(a.start,a.end),c=o.size,h=new Response(o,{status:206,statusText:"Partial Content",headers:e.headers});return h.headers.set("Content-Length",String(c)),h.headers.set("Content-Range",`bytes ${a.start}-${a.end-1}/${i.size}`),h}catch(t){return new Response("",{status:416,statusText:"Range Not Satisfiable"})}}function $(t,e){const n=e();return t.waitUntil(n),n}try{self["workbox:precaching:6.5.4"]&&_()}catch(t){}function z(t){if(!t)throw new n("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:e,url:s}=t;if(!s)throw new n("add-to-cache-list-unexpected-type",{entry:t});if(!e){const t=new URL(s,location.href);return{cacheKey:t.href,url:t.href}}const r=new URL(s,location.href),i=new URL(s,location.href);return r.searchParams.set("__WB_REVISION__",e),{cacheKey:r.href,url:i.href}}class G{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:t,state:e})=>{e&&(e.originalRequest=t)},this.cachedResponseWillBeUsed=async({event:t,state:e,cachedResponse:n})=>{if("install"===t.type&&e&&e.originalRequest&&e.originalRequest instanceof Request){const t=e.originalRequest.url;n?this.notUpdatedURLs.push(t):this.updatedURLs.push(t)}return n}}}class V{constructor({precacheController:t}){this.cacheKeyWillBeUsed=async({request:t,params:e})=>{const n=(null==e?void 0:e.cacheKey)||this.P.getCacheKeyForURL(t.url);return n?new Request(n,{headers:t.headers}):t},this.P=t}}let J,Q;async function X(t,e){let s=null;if(t.url){s=new URL(t.url).origin}if(s!==self.location.origin)throw new n("cross-origin-copy-response",{origin:s});const r=t.clone(),i={headers:new Headers(r.headers),status:r.status,statusText:r.statusText},a=e?e(i):i,o=function(){if(void 0===J){const t=new Response("");if("body"in t)try{new Response(t.body),J=!0}catch(t){J=!1}J=!1}return J}()?r.body:await r.blob();return new Response(o,a)}class Y extends A{constructor(t={}){t.cacheName=f(t.cacheName),super(t),this.j=!1!==t.fallbackToNetwork,this.plugins.push(Y.copyRedirectedCacheableResponsesPlugin)}async W(t,e){const n=await e.cacheMatch(t);return n||(e.event&&"install"===e.event.type?await this.S(t,e):await this.K(t,e))}async K(t,e){let s;const r=e.params||{};if(!this.j)throw new n("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const n=r.integrity,i=t.integrity,a=!i||i===n;s=await e.fetch(new Request(t,{integrity:"no-cors"!==t.mode?i||n:void 0})),n&&a&&"no-cors"!==t.mode&&(this.A(),await e.cachePut(t,s.clone()))}return s}async S(t,e){this.A();const s=await e.fetch(t);if(!await e.cachePut(t,s.clone()))throw new n("bad-precaching-response",{url:t.url,status:s.status});return s}A(){let t=null,e=0;for(const[n,s]of this.plugins.entries())s!==Y.copyRedirectedCacheableResponsesPlugin&&(s===Y.defaultPrecacheCacheabilityPlugin&&(t=n),s.cacheWillUpdate&&e++);0===e?this.plugins.push(Y.defaultPrecacheCacheabilityPlugin):e>1&&null!==t&&this.plugins.splice(t,1)}}Y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:t})=>!t||t.status>=400?null:t},Y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await X(t):t};class Z{constructor({cacheName:t,plugins:e=[],fallbackToNetwork:n=!0}={}){this.F=new Map,this.H=new Map,this.$=new Map,this.C=new Y({cacheName:f(t),plugins:[...e,new V({precacheController:this})],fallbackToNetwork:n}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.C}precache(t){this.addToCacheList(t),this.G||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.G=!0)}addToCacheList(t){const e=[];for(const s of t){"string"==typeof s?e.push(s):s&&void 0===s.revision&&e.push(s.url);const{cacheKey:t,url:r}=z(s),i="string"!=typeof s&&s.revision?"reload":"default";if(this.F.has(r)&&this.F.get(r)!==t)throw new n("add-to-cache-list-conflicting-entries",{firstEntry:this.F.get(r),secondEntry:t});if("string"!=typeof s&&s.integrity){if(this.$.has(t)&&this.$.get(t)!==s.integrity)throw new n("add-to-cache-list-conflicting-integrities",{url:r});this.$.set(t,s.integrity)}if(this.F.set(r,t),this.H.set(r,i),e.length>0){const t=`Workbox is precaching URLs without revision info: ${e.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(t)}}}install(t){return $(t,(async()=>{const e=new G;this.strategy.plugins.push(e);for(const[e,n]of this.F){const s=this.$.get(n),r=this.H.get(e),i=new Request(e,{integrity:s,cache:r,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:n},request:i,event:t}))}const{updatedURLs:n,notUpdatedURLs:s}=e;return{updatedURLs:n,notUpdatedURLs:s}}))}activate(t){return $(t,(async()=>{const t=await self.caches.open(this.strategy.cacheName),e=await t.keys(),n=new Set(this.F.values()),s=[];for(const r of e)n.has(r.url)||(await t.delete(r),s.push(r.url));return{deletedURLs:s}}))}getURLsToCacheKeys(){return this.F}getCachedURLs(){return[...this.F.keys()]}getCacheKeyForURL(t){const e=new URL(t,location.href);return this.F.get(e.href)}getIntegrityForCacheKey(t){return this.$.get(t)}async matchPrecache(t){const e=t instanceof Request?t.url:t,n=this.getCacheKeyForURL(e);if(n){return(await self.caches.open(this.strategy.cacheName)).match(n)}}createHandlerBoundToURL(t){const e=this.getCacheKeyForURL(t);if(!e)throw new n("non-precached-url",{url:t});return n=>(n.request=new Request(t),n.params=Object.assign({cacheKey:e},n.params),this.strategy.handle(n))}}const tt=()=>(Q||(Q=new Z),Q);class et extends r{constructor(t,e){super((({request:n})=>{const s=t.getURLsToCacheKeys();for(const r of function*(t,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:n="index.html",cleanURLs:s=!0,urlManipulation:r}={}){const i=new URL(t,location.href);i.hash="",yield i.href;const a=function(t,e=[]){for(const n of[...t.searchParams.keys()])e.some((t=>t.test(n)))&&t.searchParams.delete(n);return t}(i,e);if(yield a.href,n&&a.pathname.endsWith("/")){const t=new URL(a.href);t.pathname+=n,yield t.href}if(s){const t=new URL(a.href);t.pathname+=".html",yield t.href}if(r){const t=r({url:i});for(const e of t)yield e.href}}(n.url,e)){const e=s.get(r);if(e){return{cacheKey:e,integrity:t.getIntegrityForCacheKey(e)}}}}),t.strategy)}}t.CacheFirst=class extends A{async W(t,e){let s,r=await e.cacheMatch(t);if(!r)try{r=await e.fetchAndCachePut(t)}catch(t){t instanceof Error&&(s=t)}if(!r)throw new n("no-response",{url:t.url,error:s});return r}},t.ExpirationPlugin=class{constructor(t={}){this.cachedResponseWillBeUsed=async({event:t,request:e,cacheName:n,cachedResponse:s})=>{if(!s)return null;const r=this.V(s),i=this.J(n);d(i.expireEntries());const a=i.updateTimestamp(e.url);if(t)try{t.waitUntil(a)}catch(t){}return r?s:null},this.cacheDidUpdate=async({cacheName:t,request:e})=>{const n=this.J(t);await n.updateTimestamp(e.url),await n.expireEntries()},this.X=t,this.D=t.maxAgeSeconds,this.Y=new Map,t.purgeOnQuotaError&&function(t){p.add(t)}((()=>this.deleteCacheAndMetadata()))}J(t){if(t===w())throw new n("expire-custom-caches-only");let e=this.Y.get(t);return e||(e=new W(t,this.X),this.Y.set(t,e)),e}V(t){if(!this.D)return!0;const e=this.Z(t);if(null===e)return!0;return e>=Date.now()-1e3*this.D}Z(t){if(!t.headers.has("date"))return null;const e=t.headers.get("date"),n=new Date(e).getTime();return isNaN(n)?null:n}async deleteCacheAndMetadata(){for(const[t,e]of this.Y)await self.caches.delete(t),await e.delete();this.Y=new Map}},t.RangeRequestsPlugin=class{constructor(){this.cachedResponseWillBeUsed=async({request:t,cachedResponse:e})=>e&&t.headers.has("range")?await H(t,e):e}},t.StaleWhileRevalidate=class extends A{constructor(t={}){super(t),this.plugins.some((t=>"cacheWillUpdate"in t))||this.plugins.unshift(F)}async W(t,e){const s=e.fetchAndCachePut(t).catch((()=>{}));e.waitUntil(s);let r,i=await e.cacheMatch(t);if(i);else try{i=await s}catch(t){t instanceof Error&&(r=t)}if(!i)throw new n("no-response",{url:t.url,error:r});return i}},t.cleanupOutdatedCaches=function(){self.addEventListener("activate",(t=>{const e=f();t.waitUntil((async(t,e="-precache-")=>{const n=(await self.caches.keys()).filter((n=>n.includes(e)&&n.includes(self.registration.scope)&&n!==t));return await Promise.all(n.map((t=>self.caches.delete(t)))),n})(e).then((t=>{})))}))},t.clientsClaim=function(){self.addEventListener("activate",(()=>self.clients.claim()))},t.precacheAndRoute=function(t,e){!function(t){tt().precache(t)}(t),function(t){const e=tt();h(new et(e,t))}(e)},t.registerRoute=h}));
